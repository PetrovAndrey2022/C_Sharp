/* задаем одномерный одномерный массив array из n элементов,
который наполняем случайными числами,
требуется найти элемент массива, равный find (значение введеное пользователем) */

// создаем метод void для заполнения массива случайными числами
void FullArray(int[] collection)
{
    int length = collection.Length; // определяем длину массива
    int index = 0; // задаем индекс первого элемента массива ( по умолчанию это всегда ноль)
    while (index < length)
    {
        collection [index] = new Random (). Next(1,10); // обращаемся к элеманту массива по индексу и ложим туда случайное 
                                                        //целое число в диапазоне от 1 до 10
        index=index++; //переход к другому элементу за счет увеличения на 1 индекса
    }
}
// создаем метод void который будет печатать массив
void PrintArray(int[] col)// void метод ничего не возвращает (в смысле переменных)
                            // и соответственно в нем оператор return не применяется
{
    int count = col.Length; // обозначаем количество элементов
    int position = 0; // задаем позиции элемантам массива == index
    while (position < count )
    {
        Console.WriteLine(col[position]);//выводим на экран значение текущего элемента
        position++; // переходим к слудующему элементу массива
    }
}

// создаем метод  который будет находить индекс элемента заданого пользователем
int IndexOf(int[] collection, int find )
{
    int count = collection.Length;
    int index = 0;
    int position = 0;
    // цикл проверяет условия
    while(index<count)
    {
        if (collection[index] ==find)// проверяем совпадения index collektion c  Find
        {
            position = index;
            break; // останавливается на первом входжении (совпадении с find)
        }
        index++;
    }
    return position;

}
int[] array = new int [10];// задаем массив из 10 элементов

FullArray(array); //вызываем отдельный метод для заполнения нашего массива
// для проверки специально для проверки в массив наполненый случайными числами
// мы специально добавляет 4
array[4]=4;// просваиваем 4-му элементу значение 4
array[6]=4;// просваиваем 4-му элементу значение 6
PrintArray(array); // вызываем отдельный метод для печати (вывода на экран нашего массива)
Console.WriteLine();// выводим пустую строчку для того, что бы был виден разрыв на экране после вывода массива
int pos = IndexOf(array, 4);
Console.WriteLine(pos);